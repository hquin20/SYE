---
title: "Genre Analysis"
format: html
editor: visual
---

```{r message=F}
library(tidyverse)
library(tidytext)
library(textdata)
library(here)
```

```{r message=FALSE, warning=FALSE}
raw_bechdel <- read_csv("data/raw_bechdel.csv")
movies <- read_csv("data/movies_raw.csv")

afinn <- get_sentiments("afinn")
bing <- get_sentiments("bing")
nrc <- get_sentiments("nrc")
```

tasks: look into genre- accounting for genre, difference in positivity scores? (facet) separate line for every genre (movies have multiple lines) - similar to plot method

```{r}
movies2 <- read.csv(here::here("data/movies_sentiment.csv"))
```

```{r}
movies_genre <- movies2 %>% unnest_tokens(output = "genre", input = "genre") 
## i don't like this data set
## one row for every genre, sometimes can be wrong
```

```{r}
movies_genre %>% 
  ggplot(mapping = aes(x = sentiment_score, y = binary, color = binary)) + 
  geom_boxplot() + # facet this plot by genre
  facet_wrap("genre")

movies_genre %>% 
  ggplot(mapping = aes(x = rough_score, y = binary, color = binary)) + 
  geom_boxplot() + # facet this plot by genre
  facet_wrap("genre")
```

```{r}
movies_genre %>% filter(genre == "action") %>%
  ggplot(mapping = aes(x = genre, y = sentiment_score, color = binary)) + 
  geom_boxplot() +
  coord_flip()


movies_genre %>% filter(genre == "action") %>%
  ggplot(mapping = aes(x = genre, y = rough_score, color = binary)) + 
  geom_boxplot() +
  coord_flip()
```

```{r}
movies_genre %>% filter(genre == "family") %>%
  ggplot(mapping = aes(x = genre, y = sentiment_score, color = binary)) + 
  geom_boxplot() +
  coord_flip()

movies_genre %>% filter(genre == "family") %>%
  ggplot(mapping = aes(x = genre, y = rough_score, color = binary)) + 
  geom_boxplot() +
  coord_flip()
```

```{r}
movies_genre %>% 
  group_by(year, binary) %>% summarise(n = n())
```

```{r}
movies_genre %>% 
  group_by(year, binary) %>% summarise(n = n()) %>% 
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
movies_genre %>% filter(genre == "action") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
movies_genre %>% filter(genre == "adventure") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
movies_genre %>% filter(genre == "comedy") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
movies_genre %>% filter(genre == "romance") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()

# be careful --> n is small**
```

```{r}
movies_genre %>% filter(genre == "fantasy") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
movies_genre %>% filter(genre == "sport") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()

# n is small
```

```{r}
movies_genre %>% filter(genre == "drama") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

investigate genre and sentiment analysis with api data set next\*\*

1.  genre with new data set

-   separate genre so each movie appears more than once (since movies have multiple genres)

2.  time

3.  interactions - maybe small interaction time and movies passing within genre

-   possible fit model after this is done (more of a future task)
