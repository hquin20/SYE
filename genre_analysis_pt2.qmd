---
title: "Genre Analysis: New Data Set"
format: html
---


```{r message = F, warning=FALSE}
library(tidyverse)
library(forcats)
```

###------------------------------------------------------------------------------------------------------

test_df <- read_tsv(here::here("data.tsv")) |>    # this line takes very long time to load
  mutate(imdbid = parse_number(tconst))
movies_api <- jsonlite::read_json('http://bechdeltest.com/api/v1/getAllMovies',simplifyVector = TRUE)%>%
 tibble::tibble()%>%
  mutate(year=as.numeric(year),
        id=as.numeric(id),
        imdbid = as.numeric(imdbid))
basics.movies <- left_join(movies_api, test_df,
          by = "imdbid")
sum(is.na(basics.movies$genres)) ## only 8 missing!!
basics.movies$genres

###------------------------------------------------------------------------------------------------------
(don't need this code anymore because I created a new csv file to load in)^^^^


```{r message = F, warning=FALSE}
basics.movies <- read_csv("basics_movies.csv")
head(basics.movies)
```

```{r}
basics.movies <- basics.movies |>separate_rows(genres, sep = ",") # movies appear multiple times for multiple genres

basics.movies <- basics.movies |> mutate(binary = if_else(rating == 3, "PASS", "FAIL"))

```



```{r}
basics.movies |>
  ggplot(mapping = aes(x = binary)) +
  geom_bar() +
  facet_wrap(~genres)
```


```{r}
basics.movies %>% filter(genres == "Drama") %>% 
  group_by(year, rating) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = rating)) +
  geom_point() + 
  geom_smooth() +
  facet_wrap(~rating)
```


*Most of these plots look different from initial genre analysis*

```{r}
basics.movies %>% filter(genres == "Adventure") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
basics.movies %>% filter(genres == "Comedy") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
basics.movies %>% filter(genres == "Romance") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
basics.movies %>% filter(genres == "Fantasy") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
basics.movies %>% filter(genres == "Sport") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

```{r}
basics.movies %>% filter(genres == "Drama") %>% 
  group_by(year, binary) %>% summarise(n = n()) %>%
  ggplot(mapping = aes(x = year, y = n, color = binary)) +
  geom_point() + 
  geom_smooth()
```

lollipop plot? - possibly faceting by decade?

geom_rug +
geom_smooth(method = "glm", family = "binomial")

regression model with year and genre as covariates

```{r}
basics.movies |> 
  filter(genres == "Drama") |> 
  mutate(binary = factor(binary)) |>
  ggplot(mapping = aes(x = year, y = binary, color = binary)) +
  geom_rug() +
  geom_smooth(method = "glm", family = "binomial")   ## cannot get this to work !!

```


```{r}
proportion_pass <- basics.movies |> ## select(title, rating, binary, genres, year) |>
  filter(!genres %in% c("News", "Adult", "Talk-Show", "\\N")) |>
  group_by(genres) |>
  mutate(prop_pass = sum(binary == "PASS") / n()) |>
  filter(!is.na(genres)) |>
##  filter(decade >= 2000) |>
  mutate(decade = 10 * (year %/% 10))
  

ggplot(proportion_pass, aes(x = reorder(genres, prop_pass), y = prop_pass)) + 
  geom_segment(aes(xend = reorder(genres, prop_pass), y = 0, yend = prop_pass), color = "darkseagreen", linewidth = 2) +
  geom_point(color = "seagreen", size = 3) +
  coord_flip() +
  theme_minimal() +
  theme(axis.text.x = element_text(size = 11)) +
  ylab("Proportion of Movies that Pass") +
##  facet_wrap(~ decade) +
  xlab("Genres")
```






