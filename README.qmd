---
title: "Predicting Bechdel Test Results through Statistical Modeling"
format: gfm
---


```{r echo = F, warning = F, message = F}
library(tinytex)
library(tidyverse)
library(modelr)
library(broom)
basics_movies <- read_csv(here::here("data/basics_movies.csv"))
movies <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-03-09/movies.csv')
```


## Introduction

As we examine the portrayal of women's roles in film, it is useful to explore various criteria used to measure their representation. One notable measure is the Bechdel Test, unintentionally introduced by American cartoonist Alison Bechdel in 1986, and the primary measure of women in film that is the focus of the present analysis. To pass the test, the movie must contain two named women, who have a conversation with each other that is not about a man. The Bechdel Test is a straightforward and easy tool that allows people to quickly make base assumptions about the presence of women in film. For this reason, this project will be examining the characteristics of thousands of movies in an attempt to use logistic regression analysis to model the likelihood of passing the Bechdel Test. 

## Data

The final data set used in the analysis was available through [IMDb Non-Commercial Datasets](https://developer.imdb.com/non-commercial-datasets/) and the [Bechdel Test Movie List](https://bechdeltest.com/), containing 10,183 movie titles released from 1874 to 2023. 

```{r echo = F}
basics_movies |> 
  slice(10138:10142) |>
  select(tconst, originalTitle,
         startYear, runtimeMinutes, genres, rating) |> 
  knitr::kable() 
```

The code manual for the data from IMDb: 

 - **tconst**: alphanumeric unique identifier of the title
 
 - **originalTitle**: title of the movie
 
 - **startYear**: release year of the movie
 
 - **runtimeMinutes**: runtime in minutes
 
 - **genres**: up to three genres associated with the title
 
 - **rating**: Bechdel Test rating (0-3)


Other data used comes from the TidyTuesday social data project through GitHub, found [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2021/2021-03-09/readme.md). This data set contains 1,794 movies ranging from 1970 to 2013.  

```{r echo = F}
movies |> select(title, year, imdb_rating, metascore, budget_2013, binary) |> 
  slice(44:46) |>  knitr::kable() 
```

The code manual for the TidyTuesday data: 

- **year**: release year

- **title**: title of movie

- **binary**: binary Pass or Fail of the Bechdel Test

- **budget_2013**: budget normalized to 2013

- **metascore**: Metascore (critic) rating (0-100)

- **imdb_rating**: IMDb (user) rating (0-10)


## Genres Model

A logistic regression model was used to predict likelihood of passing the Bechdel test based on genre and release year. The model is shown below. 

$$
logit(\pi) = \beta_0 + \beta_1 \cdot Year + \beta_2 \cdot \text{Animation} + \beta_3 \cdot \text{Action} + \beta_4 \cdot \text{Adult} + \text{ } \beta_5 \cdot \text{Adventure} +\ldots + \beta_{29} \cdot \text{Year:Western}
$$

-   $\pi$ = probability of passing the test

-   $logit$ = log odds of passing the test

-   $Animation$ = 1 (*yes*) or 0 (*no*)

-   $Year:Western$ = interaction term

Code to create the model: 

```{r eval = F}
genre_model <- glm(factor(binary) ~ year + Animation + Action + Adult + 
                     Adventure + Biography + Comedy + Crime + 
                     Documentary + Drama + Family + Fantasy + 
                     History + Horror + Music + Musical +
                     Mystery + Romance + Short + Sport + 
                     Thriller + War + Western + year:Animation + 
                     year:Action + year:Adult + year:Adventure + 
                     year:Biography + year:Comedy + year:Crime +
                     year:Documentary + year:Drama + year:Family +
                     year:Fantasy + year:History + year:Horror + 
                     year:Music + year:Musical + year:Mystery + 
                     year:Romance + year:Short + year:Sport + 
                     year:Thriller + year:War + year:Western,
                   family = "binomial", data = movies_indi)
```



```{r warning = F, message = F, echo = F}
movies_indi <- read_csv(here::here("data/movies_indicator.csv"))

new_grid <- read_csv(here::here("data/movies_grid1.csv"))

mod3 <- glm(factor(binary) ~ year + Animation + Action + Adult + Adventure +
              Biography + Comedy + Crime + Documentary + Drama +
              Family + Fantasy + History + Horror + Music +
              Musical + Mystery + Romance + Short + Sport +
              Thriller + War + Western +
              year:Animation + year:Action + year:Adult + year:Adventure +
              year:Biography + year:Comedy + year:Crime + year:Documentary + year:Drama +
              year:Family + year:Fantasy + year:History + year:Horror + year:Music +
              year:Musical + year:Mystery + year:Romance + year:Short + year:Sport +
              year:Thriller + year:War + year:Western, 
            family = "binomial", data = movies_indi)

aug_mod3 <- augment(mod3, newdata = new_grid, se_fit = TRUE)

aug_mod3 <- aug_mod3 |> mutate(.pi = exp(.fitted) / (1 + exp(.fitted)))

list3 <- aug_mod3 |> pivot_longer(cols = c(Animation, Action, Adult, Adventure, Biography, Comedy, 
                                           Crime, Documentary, Drama, Family, Fantasy, History, 
                                           Horror, Music, Musical, Mystery, Romance, Short, 
                                           Sport, Thriller, War, Western), names_to = "genre", 
                                  values_to = "values")

movies_pass <- movies_indi |> filter(binary == 1)
movies_fail <- movies_indi |> filter(binary == 0)

list3 |> filter(values == 1, genre %in% 
                  c("Sport", "Comedy", "Romance", "Adventure", "Action", "Documentary", "War", "Western")) |> 
  mutate(genre = fct_reorder2(genre, .x = year, .y = .pi)) |>
  ggplot(aes(x = year, y = .pi)) +                      
  geom_line(aes(color = genre), linewidth = 0.9) + 
  geom_rug(data = movies_pass, aes(x = year, y = as.numeric(binary)), sides = "t") +  ## alpha = 0.4
  geom_rug(data = movies_fail, aes(x = year, y = as.numeric(binary)), sides = "b") +  
  scale_y_continuous(breaks = seq(0, 1, by = 0.1), limits = c(0, 1)) + 
  theme_minimal(base_size = 19) +
  labs(x = "\nYear",
       y = "Probabilty of Passing\n", 
       color = "Genre",
       title = "Different Genres Over Time") +
  scale_color_viridis_d()
```

[**Interpretation**]{.underline}

For recent years, genres with **higher probability** of PASSING:

-   *Romance, Adventure, Comedy*

Genres with **lower probability** of PASSING:

-   *War, Western, Sport*



## Ratings Model

A logistic regression model was used to predict likelihood of passing the Bechdel test based on movie budget, release year, IMDb rating, and Metascore. The model is shown below. 

$$
logit(\pi) = \beta_0 + \beta_1 \cdot \text{Budget} + \beta_2 \cdot \text{Year} + \beta_3 \cdot \text{IMDb Rating} +  \text{ } \beta_4 \cdot \text{Metascore}
$$


-   $IMDb \text{ } Rating$ = **User** ratings

-   $Metascore$ = **Critic** ratings


Code to create the model: 

```{r eval = F}
movies <- movies %>% mutate(binary_0 = ifelse(binary == "PASS", 1, 0))

mod_year <-  glm(binary_0 ~  budget_2013 +
                  year + 
                  imdb_rating +                 
                  metascore,                     
                data = movies, family = "binomial") 
```



```{r message = F, echo = F, warning = F}
movies2 <- read_csv(here::here("data/movies_sentiment.csv"))

movies2 <- movies2 %>% mutate(binary_0 = ifelse(binary == "PASS", 1, 0))

mod_year <- glm(binary_0 ~  budget_2013 +
                  year + 
                  imdb_rating +                 
                  metascore,                     
                data = movies2, family = "binomial") 

grid <- movies2 |>
  data_grid(
    year = seq_range(year, n = 4),
    binary_0 = c(0, 1),
    imdb_rating = seq_range(imdb_rating, n = 6),
    budget_2013 = median(movies2$budget_2013, na.rm = T),
    metascore = seq_range(metascore, n = 4)
    )

aug_year <- augment(mod_year, newdata = grid, se_fit = TRUE)
aug_year <- aug_year |> mutate(.pi = exp(.fitted) / (1 + exp(.fitted)))

ggplot(data = aug_year, aes(x = metascore, y = .pi)) +
  geom_line(aes(color = as.factor(round(imdb_rating))), linewidth = 1) +
  facet_wrap(~ year) + 
  labs(y = "Probability of Passing Test",
       x = "Metascore",       ## possibly scale the x-axis?
       title = "Ratings and Budget Over Time") +
  scale_color_viridis_d(name = "IMDB Rating") +
  theme_minimal(base_size = 16)
```

[**Interpretation**]{.underline}

*Predicted probability* of a movie PASSING **increases** for:

-   Movies with **lower budgets**

-   Movies with **lower IMDb user ratings**

-   Movies with **higher critic ratings**


### Limitations

1. Data for *Rating Analysis* only contains movies up to 2013

2. Bechdel data contains most popular movies reported by users


### Future Work

Future research into the presence of women in film may analyze alternative methods than the Bechdel Test, such as number of lines, aspects of female protagonists, and characteristics of the writers and directors.




